name: "Vprofile IaC"
on: 
  push:
    branches:
      - main
      - stage
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

env:
  # Credentials for AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-2
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3
      - name: "Terraform Init"
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: "Terraform format"
        id: fmt
        run: terraform fmt -check

      - name: "Terraform validate"
        id: validate
        run: terraform validate

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: "Terraform Plan Output"
        if: steps.plan.outcome == 'failure'
        run: |
          terraform show -no-color planfile
          exit 1


      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: "Terraform Apply"
        id: applyy
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      - name: "Install ingress controller"
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.applyy.outcome == 'success'
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml
      
      # - name: "Terraform Destroy"
      #   run: terraform destroy -var-file=terraform.tfvars -auto-approve

      # - name: "Terraform Destroy"
      #   run: terraform destroy -var-file=terraform.tfvars -auto-approve
